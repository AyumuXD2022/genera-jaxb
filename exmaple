dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Dependencias para SOAP
	implementation 'wsdl4j:wsdl4j:1.6.3'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.4'

	// Dependencias para generación de código
	jaxb 'org.glassfish.jaxb:jaxb-xjc:4.0.4'
	jaxb 'org.glassfish.jaxb:jaxb-core:4.0.4'
}

task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.classesDir = "${buildDir}/classes/jaxb"
	ext.schemas = [
			"https://www.dataaccess.com/webservicesserver/NumberConversion.wso?WSDL",
			"http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL"
	]

	outputs.dir sourcesDir

	doLast {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)

			schemas.each { schema ->
				xjc(destdir: sourcesDir, schema: schema, package: "com.example.demo.wsdl") {
					arg(value: "-wsdl")
					produces(dir: sourcesDir, includes: "**/*.java")
				}
			}
		}
	}
}


sourceSets {
	main {
		java {
			srcDirs += genJaxb.sourcesDir
		}
	}
}
compileJava.dependsOn genJaxb
