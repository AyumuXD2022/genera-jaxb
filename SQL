-- SCRIPT COMPLETO: ESTADO KERBEROS SQL SERVER
PRINT '=== VERIFICACI√ìN COMPLETA KERBEROS ==='
PRINT ''

-- 1. Verificar conexiones Kerberos
PRINT '1. CONEXIONES KERBEROS ACTIVAS:'
SELECT 
    CASE 
        WHEN EXISTS (SELECT 1 FROM sys.dm_exec_connections WHERE auth_scheme = 'KERBEROS') 
        THEN '‚úÖ EXISTEN CONEXIONES KERBEROS'
        ELSE '‚ùå NO HAY CONEXIONES KERBEROS'
    END as estado_kerberos;

SELECT 
    auth_scheme as esquema,
    COUNT(*) as conexiones
FROM sys.dm_exec_connections 
GROUP BY auth_scheme;

PRINT ''

-- 2. Verificar SPN
PRINT '2. CONFIGURACI√ìN SPN:'
SELECT 
    servicename as servicio,
    service_principal_name as spn,
    CASE 
        WHEN service_principal_name IS NOT NULL THEN '‚úÖ SPN CONFIGURADO'
        ELSE '‚ùå SPN NO CONFIGURADO'
    END as estado_spn
FROM sys.dm_server_services
WHERE servicename LIKE 'SQL Server%';

PRINT ''

-- 3. Verificar cuenta de servicio
PRINT '3. CUENTA DE SERVICIO:'
SELECT 
    servicename as servicio,
    service_account as cuenta,
    CASE 
        WHEN service_account LIKE '%\%' OR service_account LIKE '%@%' THEN '‚úÖ CUENTA DE DOMINIO'
        ELSE '‚ùå CUENTA LOCAL'
    END as tipo_cuenta
FROM sys.dm_server_services
WHERE servicename LIKE 'SQL Server%';

PRINT ''

-- 4. Verificar modo autenticaci√≥n
PRINT '4. MODO DE AUTENTICACI√ìN:'
SELECT 
    CASE SERVERPROPERTY('IsIntegratedSecurityOnly')
        WHEN 1 THEN '‚úÖ SOLO AUTENTICACI√ìN WINDOWS'
        WHEN 0 THEN '‚úÖ AUTENTICACI√ìN MIXTA (Windows + SQL)'
        ELSE '‚ùå DESCONOCIDO'
    END as modo_autenticacion;

PRINT ''

-- 5. RESUMEN FINAL
PRINT '5. RESUMEN KERBEROS:'
SELECT 
    'Estado Kerberos' as item,
    CASE 
        WHEN EXISTS (SELECT 1 FROM sys.dm_exec_connections WHERE auth_scheme = 'KERBEROS') 
        THEN 'FUNCIONANDO'
        ELSE 'NO FUNCIONANDO'
    END as estado
UNION ALL
SELECT 
    'SPN Configurado',
    CASE 
        WHEN EXISTS (SELECT 1 FROM sys.dm_server_services WHERE servicename LIKE 'SQL Server%' AND service_principal_name IS NOT NULL)
        THEN 'SI'
        ELSE 'NO'
    END
UNION ALL
SELECT 
    'Cuenta Dominio',
    CASE 
        WHEN EXISTS (SELECT 1 FROM sys.dm_server_services WHERE servicename LIKE 'SQL Server%' AND (service_account LIKE '%\%' OR service_account LIKE '%@%'))
        THEN 'SI'
        ELSE 'NO'
    END
UNION ALL
SELECT 
    'Solo Windows Auth',
    CASE SERVERPROPERTY('IsIntegratedSecurityOnly')
        WHEN 1 THEN 'SI'
        WHEN 0 THEN 'NO'
        ELSE 'DESCONOCIDO'
    END;



import java.sql.*;

public class ConexionConTusDatos {
    public static void main(String[] args) {
        // REEMPLAZA CON TUS DATOS REALES
        String hostname = "TU_HOSTNAME";
        String ip = "TU_DIRECCION_IP"; 
        String instancia = "TU_INSTANCIA";
        String baseDatos = "TU_BASE_DATOS";
        String usuario = "tu_usuario";
        String password = "tu_password";
        int puerto = 456123;  // ‚Üê TU PUERTO ESPEC√çFICO
        
        // Probar diferentes formatos
        String[] urls = {
            // Formato 1: Hostname + Puerto espec√≠fico
            "jdbc:sqlserver://" + hostname + ":" + puerto + ";databaseName=" + baseDatos + ";trustServerCertificate=true",
            
            // Formato 2: IP + Puerto espec√≠fico
            "jdbc:sqlserver://" + ip + ":" + puerto + ";databaseName=" + baseDatos + ";trustServerCertificate=true",
            
            // Formato 3: Hostname + Instancia + Puerto espec√≠fico
            "jdbc:sqlserver://" + hostname + "\\" + instancia + ":" + puerto + ";databaseName=" + baseDatos + ";trustServerCertificate=true",
            
            // Formato 4: IP + Instancia + Puerto espec√≠fico
            "jdbc:sqlserver://" + ip + "\\" + instancia + ":" + puerto + ";databaseName=" + baseDatos + ";trustServerCertificate=true",
            
            // Formato 5: Hostname + Instancia (sin puerto expl√≠cito)
            "jdbc:sqlserver://" + hostname + "\\" + instancia + ";databaseName=" + baseDatos + ";trustServerCertificate=true",
            
            // Formato 6: Solo hostname (sin puerto)
            "jdbc:sqlserver://" + hostname + ";databaseName=" + baseDatos + ";trustServerCertificate=true"
        };
        
        String[] descripciones = {
            "Hostname + Puerto " + puerto,
            "IP + Puerto " + puerto, 
            "Hostname + Instancia + Puerto " + puerto,
            "IP + Instancia + Puerto " + puerto,
            "Hostname + Instancia (puerto autom√°tico)",
            "Hostname (puerto autom√°tico)"
        };
        
        for (int i = 0; i < urls.length; i++) {
            try {
                System.out.println("üîå Probando: " + descripciones[i]);
                System.out.println("   URL: " + urls[i]);
                
                Connection conn = DriverManager.getConnection(urls[i], usuario, password);
                System.out.println("‚úÖ ¬°CONEXI√ìN EXITOSA!");
                
                // Verificar conexi√≥n
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(
                    "SELECT @@SERVERNAME as servidor, DB_NAME() as base_datos, @@VERSION as version"
                );
                
                if (rs.next()) {
                    System.out.println("   Servidor: " + rs.getString("servidor"));
                    System.out.println("   Base de datos: " + rs.getString("base_datos"));
                    System.out.println("   Versi√≥n SQL: " + rs.getString("version").split("\n")[0]);
                }
                
                rs.close();
                stmt.close();
                conn.close();
                
                System.out.println("üéØ CONEXI√ìN FUNCIONA CON: " + descripciones[i]);
                System.out.println("üîë URL EXITOSA: " + urls[i]);
                break;
                
            } catch (SQLException e) {
                System.err.println("‚ùå Error: " + e.getMessage());
                if (e.getErrorCode() != 0) {
                    System.err.println("   C√≥digo error: " + e.getErrorCode() + ", Estado: " + e.getSQLState());
                }
            }
            System.out.println("---");
        }
    }
}
